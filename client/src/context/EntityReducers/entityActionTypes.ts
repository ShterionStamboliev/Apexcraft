export enum EntityActionType {
    CREATE_REQUEST = 'CREATE_REQUEST',
    CREATE_SUCCESS = 'CREATE_SUCCESS',
    CREATE_ERROR = 'CREATE_ERROR',
    GET_REQUEST = 'GET_REQUEST',
    GET_SUCCESS = 'GET_SUCCESS',
    GET_ERROR = 'GET_ERROR',
    GET_ALL_REQUEST = 'GET_ALL_REQUEST',
    GET_ALL_SUCCESS = 'GET_ALL_SUCCESS',
    GET_ALL_ERROR = 'GET_ALL_ERROR',
    EDIT_REQUEST = 'EDIT_REQUEST',
    EDIT_SUCCESS = 'EDIT_SUCCESS',
    EDIT_ERROR = 'EDIT_ERROR',
    DEACTIVATE_REQUEST = 'DEACTIVATE_REQUEST',
    DEACTIVATE_SUCCESS = 'DEACTIVATE_SUCCESS',
    DEACTIVATE_ERROR = 'DEACTIVATE_ERROR',
}

export interface EntityAction<T> {
    type: EntityActionType;
    payload?: T | T[] | { error: string; id?: number; }
}